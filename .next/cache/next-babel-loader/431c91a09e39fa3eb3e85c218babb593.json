{"ast":null,"code":"var _jsxFileName = \"/Users/kakehashishunsuke/create-ideas/src/components/organisms/SelectCanvas.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport { ListItem, ListItemText, Card, CardContent } from \"@material-ui/core\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { useRouter } from \"next/router\";\n\nconst SelectCanvas = props => {\n  const canvases = props.canvases;\n  const router = useRouter();\n\n  const handleGoCanvas = id => {\n    router.push(`/Canvases/${id}`);\n  };\n\n  console.log(canvases);\n\n  if (canvases == null) {\n    return __jsx(React.Fragment, null);\n  } else {\n    const sortedCanvases = canvases.sort((a, b) => a.created_at < b.created_at ? 1 : -1);\n    return sortedCanvases.map(canvas => {\n      return __jsx(ListItem, {\n        key: canvas.created_at,\n        button: true,\n        onClick: () => //TODO:history.push() １行なるように\n        handleGoCanvas(canvas.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, __jsx(Card, {\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, __jsx(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, \"canvas名：\" + canvas.name), __jsx(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, \"created_by：\" + canvas.created_by), __jsx(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, \"created_at：\" + canvas.created_at)));\n    });\n  }\n};\n\nexport default SelectCanvas;","map":{"version":3,"sources":["/Users/kakehashishunsuke/create-ideas/src/components/organisms/SelectCanvas.js"],"names":["React","useContext","ListItem","ListItemText","Card","CardContent","AuthContext","useRouter","SelectCanvas","props","canvases","router","handleGoCanvas","id","push","console","log","sortedCanvases","sort","a","b","created_at","map","canvas","name","created_by"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,IAAjC,EAAuCC,WAAvC,QAA0D,mBAA1D;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAEA,QAAMK,cAAc,GAAIC,EAAD,IAAQ;AAC7BF,IAAAA,MAAM,CAACG,IAAP,CAAa,aAAYD,EAAG,EAA5B;AACD,GAFD;;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AACA,MAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAO,2BAAP;AACD,GAFD,MAEO;AACL,UAAMO,cAAc,GAAGP,QAAQ,CAACQ,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KACnCD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAAjB,GAA8B,CAA9B,GAAkC,CAAC,CADd,CAAvB;AAGA,WAAOJ,cAAc,CAACK,GAAf,CAAoBC,MAAD,IAAY;AACpC,aACE,MAAC,QAAD;AACE,QAAA,GAAG,EAAEA,MAAM,CAACF,UADd;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,OAAO,EAAE,MACP;AACAT,QAAAA,cAAc,CAACW,MAAM,CAACV,EAAR,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,MAAC,IAAD;AAAM,QAAA,OAAO,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,aAAaU,MAAM,CAACC,IAAlC,CADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,gBAAgBD,MAAM,CAACE,UAArC,CAFF,EAGE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,gBAAgBF,MAAM,CAACF,UAArC,CAHF,CARF,CADF;AAiBD,KAlBM,CAAP;AAmBD;AACF,CAlCD;;AAoCA,eAAeb,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { ListItem, ListItemText, Card, CardContent } from \"@material-ui/core\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { useRouter } from \"next/router\";\nconst SelectCanvas = (props) => {\n  const canvases = props.canvases;\n  const router = useRouter();\n\n  const handleGoCanvas = (id) => {\n    router.push(`/Canvases/${id}`);\n  };\n  console.log(canvases);\n  if (canvases == null) {\n    return <></>;\n  } else {\n    const sortedCanvases = canvases.sort((a, b) =>\n      a.created_at < b.created_at ? 1 : -1\n    );\n    return sortedCanvases.map((canvas) => {\n      return (\n        <ListItem\n          key={canvas.created_at}\n          button\n          onClick={() =>\n            //TODO:history.push() １行なるように\n            handleGoCanvas(canvas.id)\n          }\n        >\n          <Card variant=\"outlined\">\n            <CardContent>{\"canvas名：\" + canvas.name}</CardContent>\n            <CardContent>{\"created_by：\" + canvas.created_by}</CardContent>\n            <CardContent>{\"created_at：\" + canvas.created_at}</CardContent>\n          </Card>\n          {/* <ListItemText key={canvas.created_at} primary={caption} /> */}\n        </ListItem>\n      );\n    });\n  }\n};\n\nexport default SelectCanvas;\n"]},"metadata":{},"sourceType":"module"}