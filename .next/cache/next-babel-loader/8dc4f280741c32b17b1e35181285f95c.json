{"ast":null,"code":"var _jsxFileName = \"/Users/kakehashishunsuke/create-ideas/src/pages/CanvasList.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport { CanvasContext } from \"../contexts/CanvasContext\";\nimport Layout from \"../components/templates/Layout/Layout\";\nimport CreateCanvas from \"../components/organisms/CreateCanvas\";\nimport SelectCanvas from \"../components/organisms/SelectCanvas\";\nimport firebase from \"../firebase/firebase\";\nexport async function getStaticProps() {\n  try {\n    console.log(\"hoge\");\n    const canvases = [];\n    const db = firebase.firestore();\n    const canvasesRef = await db.collection(\"canvases\");\n    await canvasesRef.onSnapshot(snapshot => {\n      snapshot.docChanges().forEach(change => {\n        console.log(change);\n        canvases.push({\n          id: change.doc.id,\n          name: change.doc.data().name,\n          created_by: change.doc.data().created_by,\n          created_at: change.doc.data().created_at\n        }); // 追加\n\n        if (change.type === \"added\") {// addLog(change.doc.id, change.doc.data());\n        } // 更新\n        else if (change.type === \"modified\") {// modLog(change.doc.id, change.doc.data());\n          } // 削除\n          else if (change.type === \"removed\") {// removeLog(change.doc.id);\n            }\n\n        return {\n          props: {\n            canvases\n          }\n        };\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst CanvasListPage = ({\n  canvases\n}) => {\n  console.log(\"canvases\", canvases);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Canvas\\u4E00\\u89A7\"), __jsx(SelectCanvas, {\n    canvases: canvases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CanvasListPage;","map":{"version":3,"sources":["/Users/kakehashishunsuke/create-ideas/src/pages/CanvasList.js"],"names":["React","useContext","CanvasContext","Layout","CreateCanvas","SelectCanvas","firebase","getStaticProps","console","log","canvases","db","firestore","canvasesRef","collection","onSnapshot","snapshot","docChanges","forEach","change","push","id","doc","name","data","created_by","created_at","type","props","error","CanvasListPage"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAMC,QAAQ,GAAG,EAAjB;AACA,UAAMC,EAAE,GAAGL,QAAQ,CAACM,SAAT,EAAX;AACA,UAAMC,WAAW,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,UAAd,CAA1B;AACA,UAAMD,WAAW,CAACE,UAAZ,CAAwBC,QAAD,IAAc;AACzCA,MAAAA,QAAQ,CAACC,UAAT,GAAsBC,OAAtB,CAA+BC,MAAD,IAAY;AACxCX,QAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;AACAT,QAAAA,QAAQ,CAACU,IAAT,CAAc;AACZC,UAAAA,EAAE,EAAEF,MAAM,CAACG,GAAP,CAAWD,EADH;AAEZE,UAAAA,IAAI,EAAEJ,MAAM,CAACG,GAAP,CAAWE,IAAX,GAAkBD,IAFZ;AAGZE,UAAAA,UAAU,EAAEN,MAAM,CAACG,GAAP,CAAWE,IAAX,GAAkBC,UAHlB;AAIZC,UAAAA,UAAU,EAAEP,MAAM,CAACG,GAAP,CAAWE,IAAX,GAAkBE;AAJlB,SAAd,EAFwC,CAQxC;;AACA,YAAIP,MAAM,CAACQ,IAAP,KAAgB,OAApB,EAA6B,CAC3B;AACD,SAFD,CAGA;AAHA,aAIK,IAAIR,MAAM,CAACQ,IAAP,KAAgB,UAApB,EAAgC,CACnC;AACD,WAFI,CAGL;AAHK,eAIA,IAAIR,MAAM,CAACQ,IAAP,KAAgB,SAApB,EAA+B,CAClC;AACD;;AACD,eAAO;AACLC,UAAAA,KAAK,EAAE;AACLlB,YAAAA;AADK;AADF,SAAP;AAKD,OAzBD;AA0BD,KA3BK,CAAN;AA4BD,GAjCD,CAiCE,OAAOmB,KAAP,EAAc;AACdrB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ;AACD;AACF;;AAED,MAAMC,cAAc,GAAG,CAAC;AAAEpB,EAAAA;AAAF,CAAD,KAAkB;AACvCF,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,QAAxB;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGE,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CATD;;AAWA,eAAeoB,cAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { CanvasContext } from \"../contexts/CanvasContext\";\nimport Layout from \"../components/templates/Layout/Layout\";\nimport CreateCanvas from \"../components/organisms/CreateCanvas\";\nimport SelectCanvas from \"../components/organisms/SelectCanvas\";\nimport firebase from \"../firebase/firebase\";\n\nexport async function getStaticProps() {\n  try {\n    console.log(\"hoge\");\n    const canvases = [];\n    const db = firebase.firestore();\n    const canvasesRef = await db.collection(\"canvases\");\n    await canvasesRef.onSnapshot((snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        console.log(change);\n        canvases.push({\n          id: change.doc.id,\n          name: change.doc.data().name,\n          created_by: change.doc.data().created_by,\n          created_at: change.doc.data().created_at,\n        });\n        // 追加\n        if (change.type === \"added\") {\n          // addLog(change.doc.id, change.doc.data());\n        }\n        // 更新\n        else if (change.type === \"modified\") {\n          // modLog(change.doc.id, change.doc.data());\n        }\n        // 削除\n        else if (change.type === \"removed\") {\n          // removeLog(change.doc.id);\n        }\n        return {\n          props: {\n            canvases,\n          },\n        };\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst CanvasListPage = ({ canvases }) => {\n  console.log(\"canvases\", canvases);\n  return (\n    <Layout>\n      {/* <CreateCanvas /> */}\n      <div>Canvas一覧</div>\n      <SelectCanvas canvases={canvases} />\n    </Layout>\n  );\n};\n\nexport default CanvasListPage;\n"]},"metadata":{},"sourceType":"module"}