{"ast":null,"code":"var _jsxFileName = \"/Users/kakehashishunsuke/create-ideas/src/components/organisms/SelectCanvas.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport { ListItem, ListItemText, Card, CardContent } from \"@material-ui/core\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\n\nconst SelectCanvas = props => {\n  const canvases = props.canvases;\n  const router = useRouter();\n  console.log(canvases);\n\n  if (canvases == null) {\n    return __jsx(React.Fragment, null);\n  } else {\n    const sortedCanvases = canvases.sort((a, b) => a.created_at < b.created_at ? 1 : -1);\n    return sortedCanvases.map(canvas => {\n      return __jsx(ListItem, {\n        key: canvas.created_at,\n        button: true,\n        onClick: () => router.push(\"/Canvases/[id]\", `/Canvases/${canvas.id}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, __jsx(Card, {\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, __jsx(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, \"canvas名：\" + canvas.name), __jsx(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"created_by：\" + canvas.created_by), __jsx(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, \"created_at：\" + canvas.created_at)));\n    });\n  }\n};\n\nexport default SelectCanvas;","map":{"version":3,"sources":["/Users/kakehashishunsuke/create-ideas/src/components/organisms/SelectCanvas.js"],"names":["React","useContext","ListItem","ListItemText","Card","CardContent","AuthContext","useRouter","Link","SelectCanvas","props","canvases","router","console","log","sortedCanvases","sort","a","b","created_at","map","canvas","push","id","name","created_by"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,IAAjC,EAAuCC,WAAvC,QAA0D,mBAA1D;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAO,2BAAP;AACD,GAFD,MAEO;AACL,UAAMI,cAAc,GAAGJ,QAAQ,CAACK,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KACnCD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAAjB,GAA8B,CAA9B,GAAkC,CAAC,CADd,CAAvB;AAGA,WAAOJ,cAAc,CAACK,GAAf,CAAoBC,MAAD,IAAY;AACpC,aACE,MAAC,QAAD;AACE,QAAA,GAAG,EAAEA,MAAM,CAACF,UADd;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,OAAO,EAAE,MACPP,MAAM,CAACU,IAAP,CAAY,gBAAZ,EAA+B,aAAYD,MAAM,CAACE,EAAG,EAArD,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaE,MAAC,IAAD;AAAM,QAAA,OAAO,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,aAAaF,MAAM,CAACG,IAAlC,CADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,gBAAgBH,MAAM,CAACI,UAArC,CAFF,EAGE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,gBAAgBJ,MAAM,CAACF,UAArC,CAHF,CAbF,CADF;AAsBD,KAvBM,CAAP;AAwBD;AACF,CAnCD;;AAqCA,eAAeV,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { ListItem, ListItemText, Card, CardContent } from \"@material-ui/core\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nconst SelectCanvas = (props) => {\n  const canvases = props.canvases;\n  const router = useRouter();\n  console.log(canvases);\n  if (canvases == null) {\n    return <></>;\n  } else {\n    const sortedCanvases = canvases.sort((a, b) =>\n      a.created_at < b.created_at ? 1 : -1\n    );\n    return sortedCanvases.map((canvas) => {\n      return (\n        <ListItem\n          key={canvas.created_at}\n          button\n          onClick={() =>\n            router.push(\"/Canvases/[id]\", `/Canvases/${canvas.id}`)\n          }\n        >\n          {/* <Link\n            href={{ pathname: `/Canvases/${canvas.id}` }}\n            as={`/Canvases/${canvas.id}`}\n          >\n            <a>test</a>\n          </Link> */}\n          <Card variant=\"outlined\">\n            <CardContent>{\"canvas名：\" + canvas.name}</CardContent>\n            <CardContent>{\"created_by：\" + canvas.created_by}</CardContent>\n            <CardContent>{\"created_at：\" + canvas.created_at}</CardContent>\n          </Card>\n          {/* <ListItemText key={canvas.created_at} primary={caption} /> */}\n        </ListItem>\n      );\n    });\n  }\n};\n\nexport default SelectCanvas;\n"]},"metadata":{},"sourceType":"module"}