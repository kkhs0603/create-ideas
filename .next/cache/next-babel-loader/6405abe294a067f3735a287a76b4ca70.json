{"ast":null,"code":"var _jsxFileName = \"/Users/kakehashishunsuke/create-ideas/src/pages/CanvasList.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport { CanvasContext } from \"../contexts/CanvasContext\";\nimport Layout from \"../components/templates/Layout/Layout\";\nimport CreateCanvas from \"../components/organisms/CreateCanvas\";\nimport SelectCanvas from \"../components/organisms/SelectCanvas\";\nimport firebase from \"../firebase/firebase\";\nexport async function getServerSideProps() {\n  console.log(\"hoge\");\n  const db = firebase.firestore();\n  const canvases = [];\n  const result = await new Promise(async (resolve, reject) => {\n    try {\n      const canvasesRef = await db.collection(\"canvases\");\n      canvasesRef.onSnapshot(snapshot => {\n        snapshot.docChanges().forEach(change => {\n          console.log(change);\n          canvases.push({\n            id: change.doc.id,\n            name: change.doc.data().name,\n            created_by: change.doc.data().created_by,\n            created_at: change.doc.data().created_at\n          });\n        });\n        resolve(canvases);\n      });\n    } catch (error) {\n      reject([]);\n    }\n  });\n  return {\n    props: {\n      canvases: result\n    }\n  };\n}\n\nconst CanvasListPage = ({\n  canvases\n}) => {\n  console.log(\"canvases\", canvases);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Canvas\\u4E00\\u89A7\"));\n};\n\nexport default CanvasListPage;","map":{"version":3,"sources":["/Users/kakehashishunsuke/create-ideas/src/pages/CanvasList.js"],"names":["React","useContext","CanvasContext","Layout","CreateCanvas","SelectCanvas","firebase","getServerSideProps","console","log","db","firestore","canvases","result","Promise","resolve","reject","canvasesRef","collection","onSnapshot","snapshot","docChanges","forEach","change","push","id","doc","name","data","created_by","created_at","error","props","CanvasListPage"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,eAAeC,kBAAf,GAAoC;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAMC,EAAE,GAAGJ,QAAQ,CAACK,SAAT,EAAX;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,MAAM,GAAG,MAAM,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1D,QAAI;AACF,YAAMC,WAAW,GAAG,MAAMP,EAAE,CAACQ,UAAH,CAAc,UAAd,CAA1B;AACAD,MAAAA,WAAW,CAACE,UAAZ,CAAwBC,QAAD,IAAc;AACnCA,QAAAA,QAAQ,CAACC,UAAT,GAAsBC,OAAtB,CAA+BC,MAAD,IAAY;AACxCf,UAAAA,OAAO,CAACC,GAAR,CAAYc,MAAZ;AACAX,UAAAA,QAAQ,CAACY,IAAT,CAAc;AACZC,YAAAA,EAAE,EAAEF,MAAM,CAACG,GAAP,CAAWD,EADH;AAEZE,YAAAA,IAAI,EAAEJ,MAAM,CAACG,GAAP,CAAWE,IAAX,GAAkBD,IAFZ;AAGZE,YAAAA,UAAU,EAAEN,MAAM,CAACG,GAAP,CAAWE,IAAX,GAAkBC,UAHlB;AAIZC,YAAAA,UAAU,EAAEP,MAAM,CAACG,GAAP,CAAWE,IAAX,GAAkBE;AAJlB,WAAd;AAMD,SARD;AASAf,QAAAA,OAAO,CAACH,QAAD,CAAP;AACD,OAXD;AAYD,KAdD,CAcE,OAAOmB,KAAP,EAAc;AACdf,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GAlBoB,CAArB;AAmBA,SAAO;AACLgB,IAAAA,KAAK,EAAE;AACLpB,MAAAA,QAAQ,EAAEC;AADL;AADF,GAAP;AAKD;;AAED,MAAMoB,cAAc,GAAG,CAAC;AAAErB,EAAAA;AAAF,CAAD,KAAkB;AACvCJ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,QAAxB;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF;AAOD,CATD;;AAWA,eAAeqB,cAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { CanvasContext } from \"../contexts/CanvasContext\";\nimport Layout from \"../components/templates/Layout/Layout\";\nimport CreateCanvas from \"../components/organisms/CreateCanvas\";\nimport SelectCanvas from \"../components/organisms/SelectCanvas\";\nimport firebase from \"../firebase/firebase\";\n\nexport async function getServerSideProps() {\n  console.log(\"hoge\");\n  const db = firebase.firestore();\n  const canvases = [];\n  const result = await new Promise(async (resolve, reject) => {\n    try {\n      const canvasesRef = await db.collection(\"canvases\");\n      canvasesRef.onSnapshot((snapshot) => {\n        snapshot.docChanges().forEach((change) => {\n          console.log(change);\n          canvases.push({\n            id: change.doc.id,\n            name: change.doc.data().name,\n            created_by: change.doc.data().created_by,\n            created_at: change.doc.data().created_at,\n          });\n        });\n        resolve(canvases);\n      });\n    } catch (error) {\n      reject([]);\n    }\n  });\n  return {\n    props: {\n      canvases: result,\n    },\n  };\n}\n\nconst CanvasListPage = ({ canvases }) => {\n  console.log(\"canvases\", canvases);\n  return (\n    <Layout>\n      {/* <CreateCanvas /> */}\n      <div>Canvas一覧</div>\n      {/* <SelectCanvas canvases={canvases} /> */}\n    </Layout>\n  );\n};\n\nexport default CanvasListPage;\n"]},"metadata":{},"sourceType":"module"}