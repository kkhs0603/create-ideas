{"ast":null,"code":"var _jsxFileName = \"/Users/kakehashishunsuke/create-ideas/src/pages/Canvases/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CanvasContext } from \"../../contexts/CanvasContext\";\nimport Layout from \"../../components/templates/Layout/Layout\";\nimport { TextField, Button, Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRouter } from \"next/router\";\nimport firebase from \"../../firebase/firebase\";\nexport var __N_SSG = true;\nexport async function getCanvasIds() {\n  const db = firebase.firestore();\n  const snapshot = await db.collection(\"canvases\").get();\n  const ids = snapshot.docs.map(doc => {\n    return doc.id;\n  });\n  return ids;\n}\n\nconst Canvas = props => {\n  _s();\n\n  console.log(\"props\", props);\n  const classes = useStyles();\n  const {\n    enterCanvas,\n    joinedUsers\n  } = useContext(CanvasContext); // = props.location.state.canvasId;\n\n  const router = useRouter();\n  const {\n    canvasId\n  } = router.query;\n  console.log(canvasId); // const users = joinedUsers.map((user) => (\n  //   <Avatar user={user} key={user.id} alt=\"user\" src={user.image_url} />\n  // ));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(TextField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"\\u9001\\u4FE1\"));\n};\n\n_s(Canvas, \"yhWkDu2CWpRRSZaOOjb+sO0sGZk=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = Canvas;\nexport default Canvas; ///////\n//Style\n///////\n\nconst useStyles = makeStyles({\n  avatars: {\n    display: \"flex\"\n  }\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/kakehashishunsuke/create-ideas/src/pages/Canvases/[id].js"],"names":["React","useContext","useEffect","useState","CanvasContext","Layout","TextField","Button","Avatar","makeStyles","useRouter","firebase","getCanvasIds","db","firestore","snapshot","collection","get","ids","docs","map","doc","id","Canvas","props","console","log","classes","useStyles","enterCanvas","joinedUsers","router","canvasId","query","avatars","display"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,QAA0C,mBAA1C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,OAAO,eAAeC,YAAf,GAA8B;AACnC,QAAMC,EAAE,GAAGF,QAAQ,CAACG,SAAT,EAAX;AACA,QAAMC,QAAQ,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BC,GAA1B,EAAvB;AACA,QAAMC,GAAG,GAAGH,QAAQ,CAACI,IAAT,CAAcC,GAAd,CAAmBC,GAAD,IAAS;AACrC,WAAOA,GAAG,CAACC,EAAX;AACD,GAFW,CAAZ;AAGA,SAAOJ,GAAP;AACD;;AAiBD,MAAMK,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACA,QAAMG,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+B7B,UAAU,CAACG,aAAD,CAA/C,CAHwB,CAIxB;;AACA,QAAM2B,MAAM,GAAGrB,SAAS,EAAxB;AACA,QAAM;AAAEsB,IAAAA;AAAF,MAAeD,MAAM,CAACE,KAA5B;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ,EAPwB,CASxB;AACA;AACA;;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,MAA/B;AAAgC,IAAA,OAAO,EAAC,WAAxC;AAAoD,IAAA,KAAK,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF;AASD,CAtBD;;GAAMT,M;UAEYK,S,EAGDlB,S;;;KALXa,M;AAwBN,eAAeA,MAAf,C,CAEA;AACA;AACA;;AACA,MAAMK,SAAS,GAAGnB,UAAU,CAAC;AAC3ByB,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF;AADkB,CAAD,CAA5B","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { CanvasContext } from \"../../contexts/CanvasContext\";\nimport Layout from \"../../components/templates/Layout/Layout\";\nimport { TextField, Button, Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRouter } from \"next/router\";\nimport firebase from \"../../firebase/firebase\";\n\nexport async function getCanvasIds() {\n  const db = firebase.firestore();\n  const snapshot = await db.collection(\"canvases\").get();\n  const ids = snapshot.docs.map((doc) => {\n    return doc.id;\n  });\n  return ids;\n}\n\nexport async function getStaticPaths() {\n  const ids = await getCanvasIds();\n  const paths = ids.map((id) => {\n    return \"/Canvases/\" + id;\n  });\n  return {\n    paths: paths,\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps({ params }) {\n  return { props: params.id };\n}\n\nconst Canvas = (props) => {\n  console.log(\"props\", props);\n  const classes = useStyles();\n  const { enterCanvas, joinedUsers } = useContext(CanvasContext);\n  // = props.location.state.canvasId;\n  const router = useRouter();\n  const { canvasId } = router.query;\n  console.log(canvasId);\n\n  // const users = joinedUsers.map((user) => (\n  //   <Avatar user={user} key={user.id} alt=\"user\" src={user.image_url} />\n  // ));\n\n  return (\n    <Layout>\n      {/* <div className={classes.avatars}>{users}</div> */}\n      <TextField></TextField>\n      <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n        送信\n      </Button>\n    </Layout>\n  );\n};\n\nexport default Canvas;\n\n///////\n//Style\n///////\nconst useStyles = makeStyles({\n  avatars: {\n    display: \"flex\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}