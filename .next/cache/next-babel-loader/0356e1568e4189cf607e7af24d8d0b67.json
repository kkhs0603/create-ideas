{"ast":null,"code":"var _jsxFileName = \"/Users/kakehashishunsuke/create-ideas/src/components/organisms/SelectCanvas.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport { ListItem, ListItemText, Card, CardContent } from \"@material-ui/core\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nconst SelectCanvas = props => {\n  const canvases = props.canvases;\n  const {\n    handleGoCanvas\n  } = useContext(AuthContext);\n  console.log(canvases);\n\n  if (canvases == null) {\n    return __jsx(React.Fragment, null);\n  } else {\n    const sortedCanvases = canvases.sort((a, b) => new Date(b.created_at).toDateString() - new Date(a.created_at).toDateString());\n    return sortedCanvases.map(canvas => {\n      return __jsx(ListItem, {\n        key: canvas.created_at,\n        button: true,\n        onClick: () => //TODO:history.push() １行なるように\n        handleGoCanvas(canvas.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, __jsx(Card, {\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, __jsx(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, \"canvas名：\" + canvas.name), __jsx(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, \"created_by：\" + canvas.created_by), __jsx(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, \"created_at：\" + new Date(canvas.created_at).toDateString())));\n    });\n  }\n};\n\nexport default SelectCanvas;","map":{"version":3,"sources":["/Users/kakehashishunsuke/create-ideas/src/components/organisms/SelectCanvas.js"],"names":["React","useContext","ListItem","ListItemText","Card","CardContent","AuthContext","SelectCanvas","props","canvases","handleGoCanvas","console","log","sortedCanvases","sort","a","b","Date","created_at","toDateString","map","canvas","id","name","created_by"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,IAAjC,EAAuCC,WAAvC,QAA0D,mBAA1D;AAEA,SAASC,WAAT,QAA4B,4BAA5B;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAqBT,UAAU,CAACK,WAAD,CAArC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAO,2BAAP;AACD,GAFD,MAEO;AACL,UAAMI,cAAc,GAAGJ,QAAQ,CAACK,IAAT,CACrB,CAACC,CAAD,EAAIC,CAAJ,KACE,IAAIC,IAAJ,CAASD,CAAC,CAACE,UAAX,EAAuBC,YAAvB,KACA,IAAIF,IAAJ,CAASF,CAAC,CAACG,UAAX,EAAuBC,YAAvB,EAHmB,CAAvB;AAKA,WAAON,cAAc,CAACO,GAAf,CAAoBC,MAAD,IAAY;AACpC,aACE,MAAC,QAAD;AACE,QAAA,GAAG,EAAEA,MAAM,CAACH,UADd;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,OAAO,EAAE,MACP;AACAR,QAAAA,cAAc,CAACW,MAAM,CAACC,EAAR,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,MAAC,IAAD;AAAM,QAAA,OAAO,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,aAAaD,MAAM,CAACE,IAAlC,CADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,gBAAgBF,MAAM,CAACG,UAArC,CAFF,EAGE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAAgB,IAAIP,IAAJ,CAASI,MAAM,CAACH,UAAhB,EAA4BC,YAA5B,EADnB,CAHF,CARF,CADF;AAmBD,KApBM,CAAP;AAqBD;AACF,CApCD;;AAsCA,eAAeZ,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { ListItem, ListItemText, Card, CardContent } from \"@material-ui/core\";\n\nimport { AuthContext } from \"../../contexts/AuthContext\";\nconst SelectCanvas = (props) => {\n  const canvases = props.canvases;\n\n  const { handleGoCanvas } = useContext(AuthContext);\n\n  console.log(canvases);\n  if (canvases == null) {\n    return <></>;\n  } else {\n    const sortedCanvases = canvases.sort(\n      (a, b) =>\n        new Date(b.created_at).toDateString() -\n        new Date(a.created_at).toDateString()\n    );\n    return sortedCanvases.map((canvas) => {\n      return (\n        <ListItem\n          key={canvas.created_at}\n          button\n          onClick={() =>\n            //TODO:history.push() １行なるように\n            handleGoCanvas(canvas.id)\n          }\n        >\n          <Card variant=\"outlined\">\n            <CardContent>{\"canvas名：\" + canvas.name}</CardContent>\n            <CardContent>{\"created_by：\" + canvas.created_by}</CardContent>\n            <CardContent>\n              {\"created_at：\" + new Date(canvas.created_at).toDateString()}\n            </CardContent>\n          </Card>\n          {/* <ListItemText key={canvas.created_at} primary={caption} /> */}\n        </ListItem>\n      );\n    });\n  }\n};\n\nexport default SelectCanvas;\n"]},"metadata":{},"sourceType":"module"}