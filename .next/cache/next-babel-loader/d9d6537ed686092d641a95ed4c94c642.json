{"ast":null,"code":"var _jsxFileName = \"/Users/kakehashishunsuke/create-ideas/src/contexts/AuthContext.js\";\nvar __jsx = React.createElement;\nimport React, { useState, createContext, useEffect } from \"react\";\nimport firebase from \"../firebase/firebase\";\nimport ErrorMessage from \"../firebase/ErrorMessage.js\";\nimport { useRouter } from \"next/router\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nconst AuthProvider = ({\n  children\n}) => {\n  const router = useRouter();\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const auth = firebase.auth();\n  const db = firebase.firestore(); //TODO:reducerを通してstateを変更するように\n\n  const signinWithEmailAndPassword = async (email, password) => {\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n    } catch (error) {\n      return ErrorMessage(error, \"signin\");\n    }\n  };\n\n  const signupWithEmailAndPassword = async (email, password, userName) => {\n    try {\n      const result = await auth.createUserWithEmailAndPassword(email, password);\n      await result.user.updateProfile({\n        displayName: userName\n      });\n      return result;\n    } catch (error) {\n      return ErrorMessage(error, \"signup\");\n    }\n  };\n\n  const signinWithGoogle = async () => {\n    try {\n      const googleProvider = new firebase.auth.GoogleAuthProvider();\n      await auth.signInWithRedirect(googleProvider);\n    } catch (e) {\n      return ErrorMessage(e, \"signin\");\n    }\n  };\n\n  const signout = async () => {\n    try {\n      await auth.signOut();\n      console.log(\"sign out\");\n    } catch (e) {\n      return ErrorMessage(e, \"signout\");\n    }\n  };\n\n  const updateUser = async (userId, name, imageUrl) => {\n    try {\n      await db.collection(\"users\").doc(userId).update({\n        name: name,\n        image_url: imageUrl\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGoUserSetting = () => {\n    router.push(\"/settings\");\n  };\n\n  const handleGoBack = () => {\n    router.back();\n  }; //TODO:直接書く、handleはいらない\n\n\n  const handleGoCanvas = id => {//history.push({ pathname: \"/canvas\", state: { canvasId: id } });\n  };\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async user => {\n      if (user == null) {\n        setUser(null);\n        localStorage.clear();\n        return;\n      }\n\n      setUser(user);\n      const userRef = await db.collection(\"users\").doc(user.uid);\n\n      if (!userRef.get().exists) {\n        const timestamp = firebase.firestore.Timestamp.now();\n        await userRef.set({\n          id: user.uid,\n          name: user.displayName,\n          image_url: user.photoURL,\n          created_at: timestamp,\n          updated_at: timestamp\n        });\n      }\n\n      router.push(\"/CanvasList\");\n    });\n  }, [auth]);\n  return __jsx(AuthContext.Provider, {\n    value: {\n      signinWithGoogle,\n      signout,\n      signupWithEmailAndPassword,\n      signinWithEmailAndPassword,\n      user,\n      handleGoUserSetting,\n      handleGoBack,\n      handleGoCanvas,\n      updateUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["/Users/kakehashishunsuke/create-ideas/src/contexts/AuthContext.js"],"names":["React","useState","createContext","useEffect","firebase","ErrorMessage","useRouter","AuthContext","AuthProvider","children","router","user","setUser","auth","db","firestore","signinWithEmailAndPassword","email","password","signInWithEmailAndPassword","error","signupWithEmailAndPassword","userName","result","createUserWithEmailAndPassword","updateProfile","displayName","signinWithGoogle","googleProvider","GoogleAuthProvider","signInWithRedirect","e","signout","signOut","console","log","updateUser","userId","name","imageUrl","collection","doc","update","image_url","handleGoUserSetting","push","handleGoBack","back","handleGoCanvas","id","onAuthStateChanged","localStorage","clear","userRef","uid","get","exists","timestamp","Timestamp","now","set","photoURL","created_at","updated_at"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\nimport firebase from \"../firebase/firebase\";\nimport ErrorMessage from \"../firebase/ErrorMessage.js\";\nimport { useRouter } from \"next/router\";\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const router = useRouter();\n  const [user, setUser] = useState(null);\n  const auth = firebase.auth();\n  const db = firebase.firestore();\n  //TODO:reducerを通してstateを変更するように\n  const signinWithEmailAndPassword = async (email, password) => {\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n    } catch (error) {\n      return ErrorMessage(error, \"signin\");\n    }\n  };\n\n  const signupWithEmailAndPassword = async (email, password, userName) => {\n    try {\n      const result = await auth.createUserWithEmailAndPassword(email, password);\n      await result.user.updateProfile({ displayName: userName });\n      return result;\n    } catch (error) {\n      return ErrorMessage(error, \"signup\");\n    }\n  };\n\n  const signinWithGoogle = async () => {\n    try {\n      const googleProvider = new firebase.auth.GoogleAuthProvider();\n      await auth.signInWithRedirect(googleProvider);\n    } catch (e) {\n      return ErrorMessage(e, \"signin\");\n    }\n  };\n\n  const signout = async () => {\n    try {\n      await auth.signOut();\n      console.log(\"sign out\");\n    } catch (e) {\n      return ErrorMessage(e, \"signout\");\n    }\n  };\n\n  const updateUser = async (userId, name, imageUrl) => {\n    try {\n      await db\n        .collection(\"users\")\n        .doc(userId)\n        .update({ name: name, image_url: imageUrl });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGoUserSetting = () => {\n    router.push(\"/settings\");\n  };\n\n  const handleGoBack = () => {\n    router.back();\n  };\n\n  //TODO:直接書く、handleはいらない\n  const handleGoCanvas = (id) => {\n    //history.push({ pathname: \"/canvas\", state: { canvasId: id } });\n  };\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async (user) => {\n      if (user == null) {\n        setUser(null);\n        localStorage.clear();\n        return;\n      }\n      setUser(user);\n      const userRef = await db.collection(\"users\").doc(user.uid);\n      if (!userRef.get().exists) {\n        const timestamp = firebase.firestore.Timestamp.now();\n        await userRef.set({\n          id: user.uid,\n          name: user.displayName,\n          image_url: user.photoURL,\n          created_at: timestamp,\n          updated_at: timestamp,\n        });\n      }\n      router.push(\"/CanvasList\");\n    });\n  }, [auth]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        signinWithGoogle,\n        signout,\n        signupWithEmailAndPassword,\n        signinWithEmailAndPassword,\n        user,\n        handleGoUserSetting,\n        handleGoBack,\n        handleGoCanvas,\n        updateUser,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n"]},"metadata":{},"sourceType":"module"}