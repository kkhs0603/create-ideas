{"ast":null,"code":"var _jsxFileName = \"/Users/kakehashishunsuke/create-ideas/src/pages/SignInPage.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Layout from \"../components/templates/Layout/Layout\";\nimport Title from \"../components/atoms/Title/Title\";\nimport TopSlider from \"../components/molecules/TopSlider/TopSlider\";\nimport { SignIn } from \"../components/organisms/SignIn\";\nimport { SignUp } from \"../components/organisms/SignUp\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  button: {\n    color: \"BLUE\"\n  }\n});\n\nconst SignInPage = () => {\n  const classes = useStyles();\n  const {\n    0: isSignIn,\n    1: setIsSignIn\n  } = useState(true);\n  const caption = isSignIn ? \"登録しますか？\" : \"サインインしますか？\";\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(TopSlider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), isSignIn ? __jsx(SignIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }\n  }) : __jsx(SignUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 32\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    onClick: () => setIsSignIn(!isSignIn),\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, caption));\n};\n\nexport default SignInPage;","map":{"version":3,"sources":["/Users/kakehashishunsuke/create-ideas/src/pages/SignInPage.js"],"names":["React","useState","Layout","Title","TopSlider","SignIn","SignUp","makeStyles","Button","useStyles","button","color","SignInPage","classes","isSignIn","setIsSignIn","caption"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AAC3BG,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE;AADD;AADmB,CAAD,CAA5B;;AAMA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAM;AAAA,OAACK,QAAD;AAAA,OAAWC;AAAX,MAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMe,OAAO,GAAGF,QAAQ,GAAG,SAAH,GAAe,YAAvC;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGA,QAAQ,GAAG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH3B,EAIE,MAAC,MAAD;AACE,IAAA,SAAS,EAAED,OAAO,CAACH,MADrB;AAEE,IAAA,OAAO,EAAE,MAAMK,WAAW,CAAC,CAACD,QAAF,CAF5B;AAGE,IAAA,aAAa,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGE,OALH,CAJF,CADF;AAcD,CAlBD;;AAoBA,eAAeJ,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../components/templates/Layout/Layout\";\nimport Title from \"../components/atoms/Title/Title\";\nimport TopSlider from \"../components/molecules/TopSlider/TopSlider\";\nimport { SignIn } from \"../components/organisms/SignIn\";\nimport { SignUp } from \"../components/organisms/SignUp\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  button: {\n    color: \"BLUE\",\n  },\n});\n\nconst SignInPage = () => {\n  const classes = useStyles();\n  const [isSignIn, setIsSignIn] = useState(true);\n  const caption = isSignIn ? \"登録しますか？\" : \"サインインしますか？\";\n  return (\n    <Layout>\n      <Title />\n      <TopSlider />\n      {isSignIn ? <SignIn /> : <SignUp />}\n      <Button\n        className={classes.button}\n        onClick={() => setIsSignIn(!isSignIn)}\n        disableRipple\n      >\n        {caption}\n      </Button>\n    </Layout>\n  );\n};\n\nexport default SignInPage;\n"]},"metadata":{},"sourceType":"module"}