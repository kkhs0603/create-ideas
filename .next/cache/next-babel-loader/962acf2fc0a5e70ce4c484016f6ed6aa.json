{"ast":null,"code":"var _jsxFileName = \"/Users/kakehashishunsuke/create-ideas/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { User } from \"firebase\";\nimport { FC, createContext, useEffect, useState } from \"react\";\nimport firebase from \"../firebase/firebase\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nconst AuthProvider = ({\n  children\n}) => {\n  const {\n    0: currentUser,\n    1: setCurrentUser\n  } = useState(undefined);\n  useEffect(() => {\n    // ログイン状態が変化するとfirebaseのauthメソッドを呼び出す\n    firebase.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n    });\n  }, []);\n  /* 下階層のコンポーネントをラップする */\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      currentUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["/Users/kakehashishunsuke/create-ideas/src/pages/index.js"],"names":["User","FC","createContext","useEffect","useState","firebase","AuthContext","AuthProvider","children","currentUser","setCurrentUser","undefined","auth","onAuthStateChanged","user"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,UAArB;AACA,SAASC,EAAT,EAAaC,aAAb,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;;AAEA,MAAMK,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,CAACO,SAAD,CAA9C;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd;AACAE,IAAAA,QAAQ,CAACO,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AAC3CJ,MAAAA,cAAc,CAACI,IAAD,CAAd;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA;;AACA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEL,MAAAA;AAAF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CAhBD;;AAkBA,SAASF,WAAT,EAAsBC,YAAtB","sourcesContent":["import { User } from \"firebase\";\nimport { FC, createContext, useEffect, useState } from \"react\";\n\nimport firebase from \"../firebase/firebase\";\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n  useEffect(() => {\n    // ログイン状態が変化するとfirebaseのauthメソッドを呼び出す\n    firebase.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n  }, []);\n\n  /* 下階層のコンポーネントをラップする */\n  return (\n    <AuthContext.Provider value={{ currentUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n"]},"metadata":{},"sourceType":"module"}