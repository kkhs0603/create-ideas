{"ast":null,"code":"var _jsxFileName = \"/Users/kakehashishunsuke/create-ideas/src/pages/CanvasList.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport { CanvasContext } from \"../contexts/CanvasContext\";\nimport Layout from \"../components/templates/Layout/Layout\";\nimport CreateCanvas from \"../components/organisms/CreateCanvas\";\nimport SelectCanvas from \"../components/organisms/SelectCanvas\";\nimport firebase from \"../firebase/firebase\";\nexport async function getServerSideProps() {\n  console.log(\"hoge\");\n  const db = firebase.firestore();\n\n  try {\n    const canvases = [];\n    const result = await new Promise(async (resolve, reject) => {\n      const canvasesRef = await db.collection(\"canvases\");\n      canvasesRef.onSnapshot(snapshot => {\n        snapshot.docChanges().forEach(change => {\n          console.log(change);\n          canvases.push({\n            id: change.doc.id,\n            name: change.doc.data().name,\n            created_by: change.doc.data().created_by,\n            created_at: change.doc.data().created_at\n          }); // 追加\n\n          if (change.type === \"added\") {// addLog(change.doc.id, change.doc.data());\n          } // 更新\n          else if (change.type === \"modified\") {// modLog(change.doc.id, change.doc.data());\n            } // 削除\n            else if (change.type === \"removed\") {// removeLog(change.doc.id);\n              }\n        });\n        resolve(canvases);\n      });\n    });\n    return {\n      props: {\n        canvases: result\n      }\n    };\n  } catch (error) {\n    console.log(error.message);\n    return {\n      props: {\n        canvases: []\n      }\n    };\n  }\n}\n\nconst CanvasListPage = ({\n  canvases\n}) => {\n  console.log(\"canvases\", canvases);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Canvas\\u4E00\\u89A7\"), __jsx(SelectCanvas, {\n    canvases: canvases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CanvasListPage;","map":{"version":3,"sources":["/Users/kakehashishunsuke/create-ideas/src/pages/CanvasList.js"],"names":["React","useContext","CanvasContext","Layout","CreateCanvas","SelectCanvas","firebase","getServerSideProps","console","log","db","firestore","canvases","result","Promise","resolve","reject","canvasesRef","collection","onSnapshot","snapshot","docChanges","forEach","change","push","id","doc","name","data","created_by","created_at","type","props","error","message","CanvasListPage"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,eAAeC,kBAAf,GAAoC;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAMC,EAAE,GAAGJ,QAAQ,CAACK,SAAT,EAAX;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,EAAjB;AACA,UAAMC,MAAM,GAAG,MAAM,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1D,YAAMC,WAAW,GAAG,MAAMP,EAAE,CAACQ,UAAH,CAAc,UAAd,CAA1B;AACAD,MAAAA,WAAW,CAACE,UAAZ,CAAwBC,QAAD,IAAc;AACnCA,QAAAA,QAAQ,CAACC,UAAT,GAAsBC,OAAtB,CAA+BC,MAAD,IAAY;AACxCf,UAAAA,OAAO,CAACC,GAAR,CAAYc,MAAZ;AACAX,UAAAA,QAAQ,CAACY,IAAT,CAAc;AACZC,YAAAA,EAAE,EAAEF,MAAM,CAACG,GAAP,CAAWD,EADH;AAEZE,YAAAA,IAAI,EAAEJ,MAAM,CAACG,GAAP,CAAWE,IAAX,GAAkBD,IAFZ;AAGZE,YAAAA,UAAU,EAAEN,MAAM,CAACG,GAAP,CAAWE,IAAX,GAAkBC,UAHlB;AAIZC,YAAAA,UAAU,EAAEP,MAAM,CAACG,GAAP,CAAWE,IAAX,GAAkBE;AAJlB,WAAd,EAFwC,CAQxC;;AACA,cAAIP,MAAM,CAACQ,IAAP,KAAgB,OAApB,EAA6B,CAC3B;AACD,WAFD,CAGA;AAHA,eAIK,IAAIR,MAAM,CAACQ,IAAP,KAAgB,UAApB,EAAgC,CACnC;AACD,aAFI,CAGL;AAHK,iBAIA,IAAIR,MAAM,CAACQ,IAAP,KAAgB,SAApB,EAA+B,CAClC;AACD;AACF,SApBD;AAqBAhB,QAAAA,OAAO,CAACH,QAAD,CAAP;AACD,OAvBD;AAwBD,KA1BoB,CAArB;AA2BA,WAAO;AACLoB,MAAAA,KAAK,EAAE;AACLpB,QAAAA,QAAQ,EAAEC;AADL;AADF,KAAP;AAKD,GAlCD,CAkCE,OAAOoB,KAAP,EAAc;AACdzB,IAAAA,OAAO,CAACC,GAAR,CAAYwB,KAAK,CAACC,OAAlB;AACA,WAAO;AACLF,MAAAA,KAAK,EAAE;AACLpB,QAAAA,QAAQ,EAAE;AADL;AADF,KAAP;AAKD;AACF;;AAED,MAAMuB,cAAc,GAAG,CAAC;AAAEvB,EAAAA;AAAF,CAAD,KAAkB;AACvCJ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,QAAxB;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGE,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CATD;;AAWA,eAAeuB,cAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { CanvasContext } from \"../contexts/CanvasContext\";\nimport Layout from \"../components/templates/Layout/Layout\";\nimport CreateCanvas from \"../components/organisms/CreateCanvas\";\nimport SelectCanvas from \"../components/organisms/SelectCanvas\";\nimport firebase from \"../firebase/firebase\";\n\nexport async function getServerSideProps() {\n  console.log(\"hoge\");\n  const db = firebase.firestore();\n  try {\n    const canvases = [];\n    const result = await new Promise(async (resolve, reject) => {\n      const canvasesRef = await db.collection(\"canvases\");\n      canvasesRef.onSnapshot((snapshot) => {\n        snapshot.docChanges().forEach((change) => {\n          console.log(change);\n          canvases.push({\n            id: change.doc.id,\n            name: change.doc.data().name,\n            created_by: change.doc.data().created_by,\n            created_at: change.doc.data().created_at,\n          });\n          // 追加\n          if (change.type === \"added\") {\n            // addLog(change.doc.id, change.doc.data());\n          }\n          // 更新\n          else if (change.type === \"modified\") {\n            // modLog(change.doc.id, change.doc.data());\n          }\n          // 削除\n          else if (change.type === \"removed\") {\n            // removeLog(change.doc.id);\n          }\n        });\n        resolve(canvases);\n      });\n    });\n    return {\n      props: {\n        canvases: result,\n      },\n    };\n  } catch (error) {\n    console.log(error.message);\n    return {\n      props: {\n        canvases: [],\n      },\n    };\n  }\n}\n\nconst CanvasListPage = ({ canvases }) => {\n  console.log(\"canvases\", canvases);\n  return (\n    <Layout>\n      {/* <CreateCanvas /> */}\n      <div>Canvas一覧</div>\n      <SelectCanvas canvases={canvases} />\n    </Layout>\n  );\n};\n\nexport default CanvasListPage;\n"]},"metadata":{},"sourceType":"module"}